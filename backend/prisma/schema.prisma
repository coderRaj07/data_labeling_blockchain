// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id      Int    @id @default(autoincrement())
  address String @unique
  tasks   Task[] // one to many relationship: strict checking
}

model Worker {
  id             Int          @id @default(autoincrement())
  address        String       @unique
  submissions    Submission[] // multiple submissions done by worker
  balance_id     Int
  pending_amount Int
  locked_amount  Int
}

model Task {
  id          Int          @id @default(autoincrement())
  title       String       @default("Select the most clickable thumbnail")
  options     Option[] // one to many relationship: strict checking
  user_id     Int
  signatue    String
  amount      String
  user        User         @relation(fields: [user_id], references: [id]) // one to one relationship
  submissions Submission[] // multiple submissions done for a Task
}

model Option {
  id          Int          @id @default(autoincrement())
  image_url   String
  option_id   Int
  task_id     Int
  task        Task         @relation(fields: [task_id], references: [id]) // one to one relationship
  submissions Submission[] // multiple submissions done by worker
}

model Submission {
  id        Int    @id @default(autoincrement())
  worker_id Int
  worker    Worker @relation(fields: [worker_id], references: [id]) // single submission by one worker
  option_id Int
  option    Option @relation(fields: [option_id], references: [id]) // single submission by one worker
  task_id   Int
  task      Task   @relation(fields: [task_id], references: [id]) // single submission by one worker
  amount    String
}
